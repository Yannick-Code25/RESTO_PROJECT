CREATE TABLE clients (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    age INT NOT NULL CHECK(age >= 18)
);
CREATE TABLE products (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    imgSrc VARCHAR(255) NOT NULL
);
-- Création de la table `carts`
CREATE TABLE carts (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    client_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (client_id) REFERENCES clients(id) ON DELETE CASCADE
);

-- Création de la fonction qui met à jour `updated_at` avant chaque mise à jour
CREATE OR REPLACE FUNCTION update_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;  -- Définit la valeur de `updated_at` à l'heure actuelle
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Création du trigger qui appelle la fonction à chaque mise à jour de la table `carts`
CREATE TRIGGER update_cart_timestamp
BEFORE UPDATE ON carts
FOR EACH ROW
EXECUTE FUNCTION update_updated_at();
__________________________________________________________________
Explication :
Table carts :

La colonne id est définie comme GENERATED ALWAYS AS IDENTITY, permettant une auto-incrémentation.

Les colonnes created_at et updated_at utilisent TIMESTAMP et DEFAULT CURRENT_TIMESTAMP pour initialiser les valeurs à l'heure actuelle lors de la création.

La contrainte FOREIGN KEY (client_id) fait référence à la table clients, et ON DELETE CASCADE assure que si un client est supprimé, son panier sera également supprimé.

Fonction update_updated_at() :

Cette fonction définit la valeur de updated_at à l'heure actuelle chaque fois qu'une ligne de la table carts est modifiée.

Trigger update_cart_timestamp :

Le trigger est exécuté avant chaque mise à jour dans la table carts, et il appelle la fonction update_updated_at() pour mettre à jour updated_at.
__________________________________________________________________
-- Création de la table `cart_items`
CREATE TABLE cart_items (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,  -- Remplacer AUTO_INCREMENT par GENERATED
    cart_id INT,
    product_id INT,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (cart_id) REFERENCES carts(id) ON DELETE CASCADE,  -- Relation avec `carts`
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE  -- Relation avec `products`
);
